// SPDX-License-Identifier: MIT
#ifndef __ELOS_CLIENTMANAGERTHREADLISTEN_UTEST_H__
#define __ELOS_CLIENTMANAGERTHREADLISTEN_UTEST_H__

#include <cmocka_extensions/cmocka_extensions.h>
#include <cmocka_extensions/mock_extensions.h>

#include "cmocka_mocks/mock_libc.h"
#include "elos/client_manager/client_manager.h"
#include "mock_client_manager.h"

#define MOCK_SLOT 42

void *elosClientManagerThreadListen(void *ptr);

TEST_CASE_FUNC_PROTOTYPES(elosTestElosClientManagerThreadListenErrGetStatus)
TEST_CASE_FUNC_PROTOTYPES(elosTestElosClientManagerThreadListenInactive)
TEST_CASE_FUNC_PROTOTYPES(elosTestElosClientManagerThreadErrGetFreeSlot)
TEST_CASE_FUNC_PROTOTYPES(elosTestElosClientManagerThreadSlotLtZero)
TEST_CASE_FUNC_PROTOTYPES(elosTestElosClientManagerThreadErrMutexLock)
TEST_CASE_FUNC_PROTOTYPES(elosTestElosClientManagerThreadErrWaitForConnection)
TEST_CASE_FUNC_PROTOTYPES(elosTestElosClientManagerThreadErrMutexUnlock01)
TEST_CASE_FUNC_PROTOTYPES(elosTestElosClientManagerThreadErrSemUnlock01)
TEST_CASE_FUNC_PROTOTYPES(elosTestElosClientManagerThreadErrPthreadCreate)
TEST_CASE_FUNC_PROTOTYPES(elosTestElosClientManagerThreadErrSemUnlock02)
TEST_CASE_FUNC_PROTOTYPES(elosTestElosClientManagerThreadErrMutexUnlock02)
TEST_CASE_FUNC_PROTOTYPES(elosTestElosClientManagerThreadSuccessOnes)
TEST_CASE_FUNC_PROTOTYPES(elosTestElosClientManagerThreadSuccessAll)

#endif /* __ELOS_CLIENTMANAGERTHREADLISTEN_UTEST_H__ */
