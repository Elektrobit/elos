#!/bin/bash
ELOSD_LOG_FILE="/tmp/elosd.log"
ELOSD_PID_FILE="/run/elosd.pid"

start() {
    if [ -e "${ELOSD_PID_FILE}" ]
    then
        echo "elos already running"
        exit 1
    fi

    touch "${ELOSD_LOG_FILE}"
    chmod 666 "${ELOSD_LOG_FILE}"

    export ELOS_STORAGE_BACKEND_JSON_FILE="/tmp/elosd_event.log"
    stdbuf -o 0 -e 0 /usr/local/bin/elosd > "${ELOSD_LOG_FILE}" 2>&1 &
    ELOS_PID=$!

    sleep 0.2s

    if [ -d /proc/$ELOS_PID ]
    then
        echo $ELOS_PID > "${ELOSD_PID_FILE}"
    fi
}

stop() {
    ELOSD_PID=$(cat "${ELOSD_PID_FILE}")
    kill ${ELOSD_PID} >> "${ELOSD_LOG_FILE}" 2>&1
    NUMBER_RETRIES=10
    while [ -d /proc/$(cat "${ELOSD_PID_FILE}") ]; do
        sleep 0.2
        if [ ${NUMBER_RETRIES} -gt 0 ]; then
            ((NUMBER_RETRIES--))
        else
            echo "timeout to stop elsod, kill it now" | tee "${ELOSD_LOG_FILE}" 2>&1
            kill -9 ${ELOSD_PID} >> "${ELOSD_LOG_FILE}" 2>&1
            break;
        fi
    done
    rm -f "${ELOSD_PID_FILE}"
}

status() {
    if [ -e "${ELOSD_PID_FILE}" ] && [ -d /proc/$(cat "${ELOSD_PID_FILE}") ]
    then
       echo "Status : Running"
    else
       echo "Status : Stopped"
    fi
}

case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  status)
        status
        ;;
  restart)
        stop
        start
        ;;
  *)
        echo $"Usage: $0 {start|stop|restart|status}"
        exit 1
esac

exit 0
